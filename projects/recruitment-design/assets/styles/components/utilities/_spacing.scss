@mixin spacing($abbrev, $infix, $index, $prop, $max: false) {
  @include media-breakpoint-up(sm) {
    .#{$abbrev}#{$infix}-#{$index}  { #{$prop}:        #{grid-sized($index, $max)} !important; }
    .#{$abbrev}t#{$infix}-#{$index} { #{$prop}-top:    #{grid-sized($index, $max)} !important; }
    .#{$abbrev}r#{$infix}-#{$index} { #{$prop}-right:  #{grid-sized($index, $max)} !important; }
    .#{$abbrev}b#{$infix}-#{$index} { #{$prop}-bottom: #{grid-sized($index, $max)} !important; }
    .#{$abbrev}l#{$infix}-#{$index} { #{$prop}-left:   #{grid-sized($index, $max)} !important; }
    .#{$abbrev}x#{$infix}-#{$index} {
      #{$prop}-right: #{grid-sized($index, $max)} !important;
      #{$prop}-left:  #{grid-sized($index, $max)} !important;
    }
    .#{$abbrev}y#{$infix}-#{$index} {
      #{$prop}-top:    #{grid-sized($index, $max)} !important;
      #{$prop}-bottom: #{grid-sized($index, $max)} !important;
    }
  }
  @include media-breakpoint-down(sm) {
    .#{$abbrev}#{$infix}-#{$index}  { #{$prop}:        initial !important; }
    .#{$abbrev}t#{$infix}-#{$index} { #{$prop}-top:    initial !important; }
    .#{$abbrev}r#{$infix}-#{$index} { #{$prop}-right:  initial !important; }
    .#{$abbrev}b#{$infix}-#{$index} { #{$prop}-bottom: initial !important; }
    .#{$abbrev}l#{$infix}-#{$index} { #{$prop}-left:   initial !important; }
    .#{$abbrev}x#{$infix}-#{$index} {
      #{$prop}-right: initial !important;
      #{$prop}-left:  initial !important;
    }
    .#{$abbrev}y#{$infix}-#{$index} {
      #{$prop}-top:    initial !important;
      #{$prop}-bottom: initial !important;
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $prop, $abbrev in (margin: m, padding: p) {
      @for $index from -1*$grid-columns through $grid-columns {
        @if $infix == '' {
          @include spacing($abbrev, $infix, $index, $prop, false);
          @media (min-width: $container-max-width) {
            @include spacing($abbrev, $infix, $index, $prop, true);
          }
        } @else if $infix == 'xxl' {
          @include spacing($abbrev, $infix, $index, $prop, true);
        } @else {
          @include spacing($abbrev, $infix, $index, $prop, false);
        }
      }
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {

        .list-#{$abbrev}#{$infix}-#{$size} li  {
          #{$prop}:        $length;
        }

        .list-#{$abbrev}t#{$infix}-#{$size} li { #{$prop}-top:    $length; }
        .list-#{$abbrev}r#{$infix}-#{$size} li { #{$prop}-right:  $length; }
        .list-#{$abbrev}b#{$infix}-#{$size} li { #{$prop}-bottom: $length; }
        .list-#{$abbrev}l#{$infix}-#{$size} li { #{$prop}-left:   $length; }
        .list-#{$abbrev}x#{$infix}-#{$size} li {
          #{$prop}-right: $length;
          #{$prop}-left:  $length;
        }
        .list-#{$abbrev}y#{$infix}-#{$size} li {
          #{$prop}-top:    $length;
          #{$prop}-bottom: $length;
        }
      }
    }

    // Some special margin utils
    .list-m#{$infix}-auto  { margin:        auto; }
    .list-mt#{$infix}-auto { margin-top:    auto; }
    .list-mr#{$infix}-auto { margin-right:  auto; }
    .list-mb#{$infix}-auto { margin-bottom: auto; }
    .list-ml#{$infix}-auto { margin-left:   auto; }
    .list-mx#{$infix}-auto {
      margin-right: auto;
      margin-left:  auto;
    }
    .list-my#{$infix}-auto {
      margin-top:    auto;
      margin-bottom: auto;
    }
  }
}





@each $size, $length in $spacers {
  .form-m-#{$size} {
    [class*="col-"] .form-group {
      margin-right: $length;
    }

    [class*="col-"] + [class*="col-"] .form-group {
      margin-left: $length;
      margin-right: 0rem;
    }
  }
}



