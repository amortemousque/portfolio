.card.card-split {
  position: relative;
  //MOBILE
  @include media-breakpoint-down(sm) {
    &.block-2-last {
      width: 100%;
    }
  }  
  .card-body {
    @include make-row();
    flex-direction: row;
    margin: 0px;
    padding: 0px;
    width: 100%;
  }
  .card-header {
    @include make-padding-grid((1));
    text-align: center;
    color: theme-color('light');
    position: relative;
    z-index: 2;
    width: 100%;
  }
  .item {
    @include make-padding-grid((0, 1, 1, 1));
    @include make-col(12);
    margin-bottom: 0px;
    text-align: right;
    .item-body {
      padding: 0px;
    }
    .item-figure {
      @include make-grid-sized-gutter('margin-top', -1);
      opacity: 0;
      transition: opacity 0.5s;
    }
    &.item-display-2:hover .item-figure {
      opacity: 1;
    }
    &.item-display-1:hover .item-figure {
      opacity: 0.4;
    }
  }
  .item + .item {
    text-align: left;
    position: relative;
    &::before {
      @include make-grid-sized-prop('height', 2.7);
      content: " ";
      position: absolute;
      left: 0;
      width: 1px;
      background-color: $gray-600;
      opacity: 0.3;
    }
  }
  @each $color, $value in $theme-colors {
    &.card-#{$color}  {
      @include make-bg-pattern-middle($color);
      //MOBILE
      @include media-breakpoint-down(sm) {
        @include make-bg-pattern($color);
      }
      .card-body {
        background-image: none!important;
        background-color: transparent;
      }
    }
  }
}

.card-split.card-split-display-1 {
  //MOBILE
  @include media-breakpoint-down(sm) {
    .card-header {
      @include make-padding-grid((3, 2, 0, 2));
      text-align: center;
    }
    .item {
      @include make-col(24);
      @include make-padding-grid((2, 2));
      text-align: center;
      .item-figure {
        display: none;
      }
    }
    .item + .item {
      @include make-grid-sized-prop('width', 10);
      text-align: center;
      &::before {
        @include make-grid-sized-prop('width', 10);
        height: 1px;
        top: 0;
        left: 50%;
        opacity: 0.3;
        transform: translate(-50%,-50%);
      }
    }
  }
}

.card-split.card-split-display-2 {
  .carousel-item {
    align-items: flex-start;
    &.active {
      display: flex;
    }
  }
  //MOBILE
  @include media-breakpoint-down(sm) {
    .card-body {
      //MOBILE
      @include media-breakpoint-down(sm) {
        @include make-padding-grid((0, $mobile-carousel-padding, $mobile-carousel-padding, $mobile-carousel-padding));
      }
    }
    //MOBILE
    @include media-breakpoint-up(sm) {
      .carousel-item {
        display:none;
      }
    }
    .card-title {
      @include make-padding-grid((2, $mobile-carousel-padding, 2, $mobile-carousel-padding));
    }
    .carousel-controls {
      @include make-grid-sized-gutter('top', 6);
    }
    .carousel-indicators-line {
      @include make-margin-grid((1, 0, 0, 0));
      width: 100%;
      justify-content: center;
    }
  }
  @include media-breakpoint-up(sm) {
    .carousel-controls, .carousel-indicators-line {
      display: none;
    }
  }
}

//MOBILE
@include media-breakpoint-down(sm) {
  /* Specific to this view */
  .views-element-container#block-views-block-article-block-last-articles .card-splitlist {
    margin-top: 1rem !important;
    .card-body {
      padding-top: 3.3rem;
    }
  }
}
.card-splitlist {
  flex-direction: column;
  align-items: center;
  .card-nav {
    @include make-row();
    @include make-width-grid(12);
    background-color: theme-color('dark');
  }
  .card-header {
    @include make-row();
    @include make-shape-square(11);
    @include make-padding-grid(2);
    @include make-margin-grid((0, 0, -3.5, 9));
    z-index: 1;
    justify-content: center;
    flex-flow: column wrap;
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include clear-width();
      @include clear-shape();
      @include make-padding-grid(($mobile-carousel-padding, $mobile-carousel-padding, 9, $mobile-carousel-padding));
      width: 100%;
      margin: 0;
    }
  }
  .card-header + .card-body {
    @include make-padding-grid((3, 1, 0, 1));
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include make-margin-grid((-7, 0, 0, 0));      
      @include make-padding-grid((0, $mobile-carousel-padding, $mobile-carousel-padding, $mobile-carousel-padding));
    }
  }
  .card-body {
    @include make-row();
    @include make-width-grid(12);
    @include make-margin-grid((0, auto, 0, auto));
    @include make-padding-grid((1, 1, 0, 1));
    flex: auto;
    flex-direction: column;
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include clear-width();
      @include make-padding-grid((0, $mobile-carousel-padding, $mobile-carousel-padding, $mobile-carousel-padding));
      @include make-margin-grid((0, 0, 0, 0));      
      width: 100%;
      background-image: none !important;
    }
  }
  .card-list-group {
    @include make-row();
    width: 100%;
    flex-wrap: nowrap;
  }
  .card-list-group .list-group-item {
    @include make-grid-sized-gutter('margin-bottom', 1.5);
    display: flex;
    justify-content: center;
    flex-wrap: nowrap;
    background-color: transparent;
    border-color: transparent;
  }
  .list-group-item:nth-child(2n) .item {
    @extend .item-reverse;
  }
  .list-group-item:nth-child(2n) .card {
    @extend .card-reverse;
  }
  .card-list-group .list-group-item:last-child {
    @include make-grid-sized-gutter('margin-bottom', 1);
  }
  .card-list-group.list-group-overwidth .card {
    @include make-margin-grid((0, 0, 0, -4));
  }
  .card-list-group.list-group-overwidth .card-reverse.card {
    @include make-margin-grid((0, -4, 0, 0));
  }
  .card-list-group.list-group:not(:first-child) {
    @include make-grid-sized-gutter('margin-top', 1);
  }
  .card-link {
    @include make-margin-grid((0, 1, 1, 1));
    @include media-breakpoint-down(sm) {
     margin: 0;
    }
  }
  .item {
    position: relative;
    text-align: left;
    padding: 0px;
  }
  .btn:not([class*="btn-floating"]) {
    @include btn-outline('primary');
  }
  @each $color, $value in $theme-colors {
    &.card-#{$color} {
      $reverse-color: get-reverse-color($color);
      color: get-color-yiq($value);
      .card-header  {
        @include make-bg-pattern($color);
      }
      .card-body {
        @include make-bg-pattern('dark');
      }
      .item-subtitle {
        color: theme-color($color);
        //MOBILE
        /*@include media-breakpoint-down(sm) {
          color: theme-color($reverse-color);
        }*/
      }
      .btn:not([class*="btn-floating"]) {
        @include btn-outline($color);
        //MOBILE
        @include media-breakpoint-down(sm) {
          @include btn-outline($reverse-color);
        }
      }
    }
  }


  //CAROUSEL MOBILE
  .carousel-controls {
    @include make-grid-sized-gutter('top', 10);
    display: none;
    //MOBILE
    @include media-breakpoint-down(sm) {
      display: flex;
    }
  }
  .carousel-indicators-line {
    display: none;
    //MOBILE
    @include media-breakpoint-down(sm) {
      display: flex;
    }
    li {
      background-color: theme-color('light');
    }
  }

  @include media-breakpoint-down(sm) {
    .card-list-group .list-group-item.carousel-item {
      display: none;
    }
    .card-list-group .list-group-item.carousel-item.active {
      display: block;
    }
  }
}

.card-splitlist.card-splitlist-display-2 {
  .card-header {
    @include make-row();
    @include make-width-grid(12);
    @include make-padding-grid(1);
    @include make-margin-grid((0, 0, 0, 0));
    height: auto;
    max-height: inherit;
    min-height: auto;
    background: none;
    color: theme-color('dark');
    text-align: center;
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include clear-width();
      @include make-padding-grid(($mobile-card-padding, 2, 2.5, 2));
    }  
  }

  .card-body {
    @include make-row();
    @include make-width-grid(12);
    @include make-margin-grid((0, auto, 0, auto));
    @include make-padding-grid((1, 1, 0, 1));
    flex: auto;
    flex-direction: column;
    align-items: center;

    //MOBILE
    @include media-breakpoint-down(sm) {
      @include clear-width();
      @include make-padding-grid((0, $mobile-carousel-padding, $mobile-carousel-padding, $mobile-carousel-padding));
      @include make-margin-grid((0, 0, 0, 0));      
      width: 100%;
      background-image: none !important;
    }    
  }

  //MOBILE
  @include media-breakpoint-down(sm) {
    .form-more-result.form-more-infinite {
      @include make-padding-grid((1, 0, 0, 0));
      @include make-margin-grid((0, 0, 0, 0));
      @include make-width-grid(24);
      background-color: theme-color('dark');

    }
  }

  .card-list-group {
    @include make-width-grid(11);
    display: flex;    
    flex-wrap: wrap;
    flex-direction: row;
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include clear-width();
      flex-direction: column;
      @include make-margin-grid((3, 0, 0, 0));
    }  
  }

  .list-group-item, .list-group-item:last-child {
    @include make-grid-sized-gutter('margin-bottom', 1);
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include make-grid-sized-gutter('margin-bottom', 2);
    }
  }
  .list-group-item:nth-child(2n) {
    margin-left: auto;
  }
  .item {
    @include make-shape-square(5);
    @include shadow-1();
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include make-shape-square(18);
    }  
  }
  .card-link {
    z-index: 1;
  }    
  @each $color, $value in $theme-colors {
    &.card-#{$color} {
      .btn:not([class*="btn-floating"]) {
        //MOBILE
        @include media-breakpoint-down(sm) {
          @include btn-outline($color);
        }
      }
    }
  }
}

.card-splitlist.card-splitlist-display-2-extended {
  .card-body {
    @include make-row();
    @include make-width-grid(24);
    background-image: unset;
  }
  .card-list-group.list-group:not(:first-child) {
    margin: 0;
  }
  .card-list-group.list-group:first-child {
    
    //MOBILE
    @include media-breakpoint-down(sm) {
      @include make-margin-grid((3, 0, 0, 0));
    }
  }
}